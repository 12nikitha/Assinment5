package com.springboot1.prodapt1.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.springboot1.prodapt1.repository.ElectronicRepository;
import com.springboot1.prodapt1.entity.Customer;
import com.springboot1.prodapt1.entity.Electronicshop;

@RestController
@CrossOrigin
public class Electroniccontroller {
	@RequestMapping("/electronics")
    public String Electronicshop() {
       return "electronics";
   }
    
    @Autowired
      private ElectronicRepository electronicRepository;

      // get all employees
      @GetMapping("/getelectronics")
      public List<Electronicshop> getAllelectronics(){
          return electronicRepository.findAll();
      } 
      
      @PostMapping("/addelectronics")
      public Electronicshop addelectronics(@RequestBody Electronicshop electronics) {
          return electronicRepository.save(electronics);
      }
    //delete operation
      @DeleteMapping("/deleteelectronics/{cost}")
      public void deleteelectronics(@PathVariable("cost") int cost) {
          System.out.println("Record deleted");
          electronicRepository.deleteById(cost);
         
      }
      @PutMapping("/electronics/{cost}")   //
      public ResponseEntity<Electronicshop> updateElectronic(@PathVariable Integer cost, @RequestBody Electronicshop electronics){
          Electronicshop elect = electronicRepository.findById(cost)
                  .orElseThrow(() -> new RuntimeException("Electronics not exist with cost :" + cost));

          elect.setCost(cost);
          elect.setProduct(electronics.getProduct());
          elect.setDiscount(electronics.getDiscount());
          

          Electronicshop updatedElectronicshop = electronicRepository.save(elect);
          return ResponseEntity.ok(updatedElectronicshop);
      }
      
              
              
                
              
}
package com.springboot1.prodapt1.repository;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.stereotype.Repository;

import com.springboot1.prodapt1.entity.Electronicshop;


	@Repository


	public interface  ElectronicRepository extends  JpaRepository<Electronicshop , Integer> {
		

	}



      
